generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["public", "tree", "user"]
}

model branches {
  branch_id       Int           @id @default(autoincrement())
  conversation_id Int
  name            String        @db.VarChar(50)
  tip_node_id     Int
  created_at      DateTime?     @default(now()) @db.Timestamp(6)
  conversations   conversations @relation(fields: [conversation_id], references: [conversation_id], onDelete: NoAction, onUpdate: NoAction)
  nodes           nodes         @relation(fields: [tip_node_id], references: [node_id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([conversation_id, name])
  @@schema("tree")
}

model conversations {
  conversation_id Int        @id @default(autoincrement())
  user_id         Int
  title           String?    @db.VarChar(255)
  created_at      DateTime?  @default(now()) @db.Timestamp(6)
  branches        branches[]
  users           users      @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction)
  nodes           nodes[]

  @@schema("tree")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model nodes {
  node_id         Int            @id @default(autoincrement())
  conversation_id Int?
  parent_id       Int?
  user_content    String?
  created_at      DateTime?      @default(now()) @db.Timestamp(6)
  ai_content      String?
  context         String?
  node_type       String?
  branches        branches[]
  conversations   conversations? @relation(fields: [conversation_id], references: [conversation_id], onDelete: NoAction, onUpdate: NoAction)
  nodes           nodes?         @relation("nodesTonodes", fields: [parent_id], references: [node_id], onDelete: NoAction, onUpdate: NoAction)
  other_nodes     nodes[]        @relation("nodesTonodes")

  @@schema("tree")
}

model users {
  user_id       Int             @id @default(autoincrement())
  username      String          @unique @db.VarChar(50)
  password_hash String          @db.VarChar(255)
  email         String          @unique @db.VarChar(100)
  created_at    DateTime?       @default(now()) @db.Timestamp(6)
  conversations conversations[]

  @@schema("user")
}
